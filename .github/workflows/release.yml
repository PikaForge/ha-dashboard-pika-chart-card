name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build the card
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  validate:
    runs-on: ubuntu-latest
    name: Validate with HACS
    # Continue even if validation fails
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: plugin
          ignore: wheels

  release:
    runs-on: ubuntu-latest
    needs: [build, validate]
    # Always run release even if validate fails
    if: always() && needs.build.result == 'success'
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Get card info
        id: card
        run: |
          # Get card name from package.json
          CARD_NAME=$(node -p "require('./package.json').name")
          echo "name=$CARD_NAME" >> $GITHUB_OUTPUT
          
          # Create display name
          DISPLAY_NAME="Pika Chart Card"
          echo "display_name=$DISPLAY_NAME" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: previous_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ steps.tag.outputs.tag }}^ 2>/dev/null || echo "")
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -n "${{ steps.previous_tag.outputs.previous_tag }}" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" ${{ steps.previous_tag.outputs.previous_tag }}..${{ steps.tag.outputs.tag }} | grep -v "Merge" || true)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" | grep -v "Merge" || true)
          fi
          
          # Escape for GitHub Actions
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

      - name: Check if prerelease
        id: prerelease
        run: |
          if [[ "${{ steps.tag.outputs.tag }}" =~ -(alpha|beta|rc|pre) ]] || [[ "${{ steps.tag.outputs.tag }}" == *-* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Check validation status
        id: validation
        run: |
          if [ "${{ needs.validate.result }}" == "success" ]; then
            echo "validation_status=✅ HACS validation passed" >> $GITHUB_OUTPUT
          else
            echo "validation_status=⚠️ HACS validation failed or was skipped" >> $GITHUB_OUTPUT
          fi

      - name: Prepare release assets
        run: |
          # HACS will look for pika-chart-card.js in the release
          # (strips "lovelace-" prefix from repo name)
          cp dist/pika-chart-card.js .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.card.outputs.display_name }} ${{ steps.tag.outputs.tag }}
          body: |
            ## Status
            
            ${{ steps.validation.outputs.validation_status }}
            
            ## Installation
            
            ### HACS (Recommended)
            [![Open your Home Assistant instance and open a repository inside the Home Assistant Community Store.](https://my.home-assistant.io/badges/hacs_repository.svg)](https://my.home-assistant.io/redirect/hacs_repository/?owner=${{ github.repository_owner }}&repository=${{ github.event.repository.name }}&category=plugin)
            
            1. Click the button above or search for "Pika Chart Card" in HACS
            2. Install the card from HACS
            3. Add the resource to your Lovelace configuration (HACS should do this automatically)
            4. Clear your browser cache
            
            ### Manual Installation
            1. Download `pika-chart-card.js` from this release
            2. Copy it to `/config/www/pika-chart-card.js`
            3. Add the resource to your Lovelace configuration:
               ```yaml
               resources:
                 - url: /local/pika-chart-card.js
                   type: module
               ```
            4. Clear your browser cache
            
            ## Features
            - 📊 Multiple chart libraries: Chart.js and D3.js
            - 📈 Mixed chart types in the same graph
            - 📉 Home Assistant statistics support
            - 🎨 Extensive customization options
            - 🔄 Real-time updates
            
            ## What's Changed
            ${{ steps.changelog.outputs.changelog }}
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.previous_tag.outputs.previous_tag }}...${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: ${{ steps.prerelease.outputs.prerelease }}

      - name: Upload JavaScript file (HACS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pika-chart-card.js
          asset_name: pika-chart-card.js
          asset_content_type: application/javascript